// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.2
// source: api/compute/v1/compute_power.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadScriptFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body []byte `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UploadScriptFileRequest) Reset() {
	*x = UploadScriptFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_compute_power_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadScriptFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadScriptFileRequest) ProtoMessage() {}

func (x *UploadScriptFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_compute_power_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadScriptFileRequest.ProtoReflect.Descriptor instead.
func (*UploadScriptFileRequest) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_compute_power_proto_rawDescGZIP(), []int{0}
}

func (x *UploadScriptFileRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *UploadScriptFileRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UploadScriptFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskNumber    int32  `protobuf:"varint,2,opt,name=taskNumber,proto3" json:"taskNumber,omitempty"`
	ScriptName    string `protobuf:"bytes,3,opt,name=scriptName,proto3" json:"scriptName,omitempty"`
	ScriptContent string `protobuf:"bytes,4,opt,name=scriptContent,proto3" json:"scriptContent,omitempty"`
	ExecuteState  int32  `protobuf:"varint,5,opt,name=executeState,proto3" json:"executeState,omitempty"`
}

func (x *UploadScriptFileReply) Reset() {
	*x = UploadScriptFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_compute_power_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadScriptFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadScriptFileReply) ProtoMessage() {}

func (x *UploadScriptFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_compute_power_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadScriptFileReply.ProtoReflect.Descriptor instead.
func (*UploadScriptFileReply) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_compute_power_proto_rawDescGZIP(), []int{1}
}

func (x *UploadScriptFileReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UploadScriptFileReply) GetTaskNumber() int32 {
	if x != nil {
		return x.TaskNumber
	}
	return 0
}

func (x *UploadScriptFileReply) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

func (x *UploadScriptFileReply) GetScriptContent() string {
	if x != nil {
		return x.ScriptContent
	}
	return ""
}

func (x *UploadScriptFileReply) GetExecuteState() int32 {
	if x != nil {
		return x.ExecuteState
	}
	return 0
}

type GetScriptListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Size int32 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *GetScriptListRequest) Reset() {
	*x = GetScriptListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_compute_power_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScriptListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScriptListRequest) ProtoMessage() {}

func (x *GetScriptListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_compute_power_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScriptListRequest.ProtoReflect.Descriptor instead.
func (*GetScriptListRequest) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_compute_power_proto_rawDescGZIP(), []int{2}
}

func (x *GetScriptListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetScriptListRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GetScriptListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*UploadScriptFileReply `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int32                    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page  int32                    `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Size  int32                    `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *GetScriptListReply) Reset() {
	*x = GetScriptListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_compute_power_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScriptListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScriptListReply) ProtoMessage() {}

func (x *GetScriptListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_compute_power_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScriptListReply.ProtoReflect.Descriptor instead.
func (*GetScriptListReply) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_compute_power_proto_rawDescGZIP(), []int{3}
}

func (x *GetScriptListReply) GetList() []*UploadScriptFileReply {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetScriptListReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetScriptListReply) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetScriptListReply) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type RunPythonPackageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RunPythonPackageRequest) Reset() {
	*x = RunPythonPackageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_compute_power_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunPythonPackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunPythonPackageRequest) ProtoMessage() {}

func (x *RunPythonPackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_compute_power_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunPythonPackageRequest.ProtoReflect.Descriptor instead.
func (*RunPythonPackageRequest) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_compute_power_proto_rawDescGZIP(), []int{4}
}

func (x *RunPythonPackageRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RunPythonPackageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskNumber    int32  `protobuf:"varint,2,opt,name=taskNumber,proto3" json:"taskNumber,omitempty"`
	ScriptName    string `protobuf:"bytes,3,opt,name=scriptName,proto3" json:"scriptName,omitempty"`
	ScriptContent string `protobuf:"bytes,4,opt,name=scriptContent,proto3" json:"scriptContent,omitempty"`
	ExecuteState  int32  `protobuf:"varint,5,opt,name=executeState,proto3" json:"executeState,omitempty"`
	ExecuteResult string `protobuf:"bytes,6,opt,name=executeResult,proto3" json:"executeResult,omitempty"`
}

func (x *RunPythonPackageReply) Reset() {
	*x = RunPythonPackageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_compute_power_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunPythonPackageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunPythonPackageReply) ProtoMessage() {}

func (x *RunPythonPackageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_compute_power_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunPythonPackageReply.ProtoReflect.Descriptor instead.
func (*RunPythonPackageReply) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_compute_power_proto_rawDescGZIP(), []int{5}
}

func (x *RunPythonPackageReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RunPythonPackageReply) GetTaskNumber() int32 {
	if x != nil {
		return x.TaskNumber
	}
	return 0
}

func (x *RunPythonPackageReply) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

func (x *RunPythonPackageReply) GetScriptContent() string {
	if x != nil {
		return x.ScriptContent
	}
	return ""
}

func (x *RunPythonPackageReply) GetExecuteState() int32 {
	if x != nil {
		return x.ExecuteState
	}
	return 0
}

func (x *RunPythonPackageReply) GetExecuteResult() string {
	if x != nil {
		return x.ExecuteResult
	}
	return ""
}

type CancelExecPythonPackageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CancelExecPythonPackageRequest) Reset() {
	*x = CancelExecPythonPackageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_compute_power_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelExecPythonPackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelExecPythonPackageRequest) ProtoMessage() {}

func (x *CancelExecPythonPackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_compute_power_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelExecPythonPackageRequest.ProtoReflect.Descriptor instead.
func (*CancelExecPythonPackageRequest) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_compute_power_proto_rawDescGZIP(), []int{6}
}

func (x *CancelExecPythonPackageRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CancelExecPythonPackageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskNumber    int32  `protobuf:"varint,2,opt,name=taskNumber,proto3" json:"taskNumber,omitempty"`
	ScriptName    string `protobuf:"bytes,3,opt,name=scriptName,proto3" json:"scriptName,omitempty"`
	ScriptContent string `protobuf:"bytes,4,opt,name=scriptContent,proto3" json:"scriptContent,omitempty"`
	ExecuteState  int32  `protobuf:"varint,5,opt,name=executeState,proto3" json:"executeState,omitempty"`
	ExecuteResult string `protobuf:"bytes,6,opt,name=executeResult,proto3" json:"executeResult,omitempty"`
}

func (x *CancelExecPythonPackageReply) Reset() {
	*x = CancelExecPythonPackageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_compute_power_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelExecPythonPackageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelExecPythonPackageReply) ProtoMessage() {}

func (x *CancelExecPythonPackageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_compute_power_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelExecPythonPackageReply.ProtoReflect.Descriptor instead.
func (*CancelExecPythonPackageReply) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_compute_power_proto_rawDescGZIP(), []int{7}
}

func (x *CancelExecPythonPackageReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CancelExecPythonPackageReply) GetTaskNumber() int32 {
	if x != nil {
		return x.TaskNumber
	}
	return 0
}

func (x *CancelExecPythonPackageReply) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

func (x *CancelExecPythonPackageReply) GetScriptContent() string {
	if x != nil {
		return x.ScriptContent
	}
	return ""
}

func (x *CancelExecPythonPackageReply) GetExecuteState() int32 {
	if x != nil {
		return x.ExecuteState
	}
	return 0
}

func (x *CancelExecPythonPackageReply) GetExecuteResult() string {
	if x != nil {
		return x.ExecuteResult
	}
	return ""
}

type GetScriptInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetScriptInfoRequest) Reset() {
	*x = GetScriptInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_compute_power_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScriptInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScriptInfoRequest) ProtoMessage() {}

func (x *GetScriptInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_compute_power_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScriptInfoRequest.ProtoReflect.Descriptor instead.
func (*GetScriptInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_compute_power_proto_rawDescGZIP(), []int{8}
}

func (x *GetScriptInfoRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetScriptInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskNumber    int32  `protobuf:"varint,2,opt,name=taskNumber,proto3" json:"taskNumber,omitempty"`
	ScriptName    string `protobuf:"bytes,3,opt,name=scriptName,proto3" json:"scriptName,omitempty"`
	ScriptContent string `protobuf:"bytes,4,opt,name=scriptContent,proto3" json:"scriptContent,omitempty"`
	ExecuteState  int32  `protobuf:"varint,5,opt,name=executeState,proto3" json:"executeState,omitempty"`
	ExecuteResult string `protobuf:"bytes,6,opt,name=executeResult,proto3" json:"executeResult,omitempty"`
}

func (x *GetScriptInfoReply) Reset() {
	*x = GetScriptInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_compute_power_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScriptInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScriptInfoReply) ProtoMessage() {}

func (x *GetScriptInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_compute_power_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScriptInfoReply.ProtoReflect.Descriptor instead.
func (*GetScriptInfoReply) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_compute_power_proto_rawDescGZIP(), []int{9}
}

func (x *GetScriptInfoReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetScriptInfoReply) GetTaskNumber() int32 {
	if x != nil {
		return x.TaskNumber
	}
	return 0
}

func (x *GetScriptInfoReply) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

func (x *GetScriptInfoReply) GetScriptContent() string {
	if x != nil {
		return x.ScriptContent
	}
	return ""
}

func (x *GetScriptInfoReply) GetExecuteState() int32 {
	if x != nil {
		return x.ExecuteState
	}
	return 0
}

func (x *GetScriptInfoReply) GetExecuteResult() string {
	if x != nil {
		return x.ExecuteResult
	}
	return ""
}

type DownloadScriptExecuteResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DownloadScriptExecuteResultRequest) Reset() {
	*x = DownloadScriptExecuteResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_compute_power_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadScriptExecuteResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadScriptExecuteResultRequest) ProtoMessage() {}

func (x *DownloadScriptExecuteResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_compute_power_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadScriptExecuteResultRequest.ProtoReflect.Descriptor instead.
func (*DownloadScriptExecuteResultRequest) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_compute_power_proto_rawDescGZIP(), []int{10}
}

func (x *DownloadScriptExecuteResultRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DownloadScriptExecuteResultReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body []byte `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DownloadScriptExecuteResultReply) Reset() {
	*x = DownloadScriptExecuteResultReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_compute_power_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadScriptExecuteResultReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadScriptExecuteResultReply) ProtoMessage() {}

func (x *DownloadScriptExecuteResultReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_compute_power_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadScriptExecuteResultReply.ProtoReflect.Descriptor instead.
func (*DownloadScriptExecuteResultReply) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_compute_power_proto_rawDescGZIP(), []int{11}
}

func (x *DownloadScriptExecuteResultReply) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *DownloadScriptExecuteResultReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_api_compute_v1_compute_power_proto protoreflect.FileDescriptor

var file_api_compute_v1_compute_power_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x41, 0x0a, 0x17, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3e, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x39, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x29, 0x0a, 0x17, 0x52, 0x75, 0x6e,
	0x50, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xd7, 0x01, 0x0a, 0x15, 0x52, 0x75, 0x6e, 0x50, 0x79, 0x74, 0x68,
	0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x30,
	0x0a, 0x1e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x50, 0x79, 0x74, 0x68,
	0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xde, 0x01, 0x0a, 0x1c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x50,
	0x79, 0x74, 0x68, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x34, 0x0a, 0x22, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x20, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x32, 0xee, 0x06, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x12, 0x80, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x2d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x80, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2f, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x87, 0x01, 0x0a, 0x10, 0x52, 0x75,
	0x6e, 0x50, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x27,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x75, 0x6e, 0x50, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x50, 0x79, 0x74, 0x68,
	0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2f, 0x70, 0x79, 0x74,
	0x68, 0x6f, 0x6e, 0x12, 0x9c, 0x01, 0x0a, 0x17, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x45, 0x78,
	0x65, 0x63, 0x50, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12,
	0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x50, 0x79, 0x74, 0x68, 0x6f,
	0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x50, 0x79, 0x74, 0x68, 0x6f,
	0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x2d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2f, 0x70, 0x79, 0x74, 0x68,
	0x6f, 0x6e, 0x12, 0x85, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x2d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xa6, 0x01, 0x0a, 0x1b, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x42, 0x4f, 0x0a, 0x0e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f, 0x68, 0x61, 0x69, 0x6a, 0x69, 0x61, 0x6e, 0x67, 0x2f, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2f, 0x76,
	0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_compute_v1_compute_power_proto_rawDescOnce sync.Once
	file_api_compute_v1_compute_power_proto_rawDescData = file_api_compute_v1_compute_power_proto_rawDesc
)

func file_api_compute_v1_compute_power_proto_rawDescGZIP() []byte {
	file_api_compute_v1_compute_power_proto_rawDescOnce.Do(func() {
		file_api_compute_v1_compute_power_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_compute_v1_compute_power_proto_rawDescData)
	})
	return file_api_compute_v1_compute_power_proto_rawDescData
}

var file_api_compute_v1_compute_power_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_compute_v1_compute_power_proto_goTypes = []interface{}{
	(*UploadScriptFileRequest)(nil),            // 0: api.compute.v1.UploadScriptFileRequest
	(*UploadScriptFileReply)(nil),              // 1: api.compute.v1.UploadScriptFileReply
	(*GetScriptListRequest)(nil),               // 2: api.compute.v1.GetScriptListRequest
	(*GetScriptListReply)(nil),                 // 3: api.compute.v1.GetScriptListReply
	(*RunPythonPackageRequest)(nil),            // 4: api.compute.v1.RunPythonPackageRequest
	(*RunPythonPackageReply)(nil),              // 5: api.compute.v1.RunPythonPackageReply
	(*CancelExecPythonPackageRequest)(nil),     // 6: api.compute.v1.CancelExecPythonPackageRequest
	(*CancelExecPythonPackageReply)(nil),       // 7: api.compute.v1.CancelExecPythonPackageReply
	(*GetScriptInfoRequest)(nil),               // 8: api.compute.v1.GetScriptInfoRequest
	(*GetScriptInfoReply)(nil),                 // 9: api.compute.v1.GetScriptInfoReply
	(*DownloadScriptExecuteResultRequest)(nil), // 10: api.compute.v1.DownloadScriptExecuteResultRequest
	(*DownloadScriptExecuteResultReply)(nil),   // 11: api.compute.v1.DownloadScriptExecuteResultReply
}
var file_api_compute_v1_compute_power_proto_depIdxs = []int32{
	1,  // 0: api.compute.v1.GetScriptListReply.list:type_name -> api.compute.v1.UploadScriptFileReply
	0,  // 1: api.compute.v1.ComputePower.UploadScriptFile:input_type -> api.compute.v1.UploadScriptFileRequest
	2,  // 2: api.compute.v1.ComputePower.GetScriptList:input_type -> api.compute.v1.GetScriptListRequest
	4,  // 3: api.compute.v1.ComputePower.RunPythonPackage:input_type -> api.compute.v1.RunPythonPackageRequest
	6,  // 4: api.compute.v1.ComputePower.CancelExecPythonPackage:input_type -> api.compute.v1.CancelExecPythonPackageRequest
	8,  // 5: api.compute.v1.ComputePower.GetScriptInfo:input_type -> api.compute.v1.GetScriptInfoRequest
	10, // 6: api.compute.v1.ComputePower.DownloadScriptExecuteResult:input_type -> api.compute.v1.DownloadScriptExecuteResultRequest
	1,  // 7: api.compute.v1.ComputePower.UploadScriptFile:output_type -> api.compute.v1.UploadScriptFileReply
	3,  // 8: api.compute.v1.ComputePower.GetScriptList:output_type -> api.compute.v1.GetScriptListReply
	5,  // 9: api.compute.v1.ComputePower.RunPythonPackage:output_type -> api.compute.v1.RunPythonPackageReply
	7,  // 10: api.compute.v1.ComputePower.CancelExecPythonPackage:output_type -> api.compute.v1.CancelExecPythonPackageReply
	9,  // 11: api.compute.v1.ComputePower.GetScriptInfo:output_type -> api.compute.v1.GetScriptInfoReply
	11, // 12: api.compute.v1.ComputePower.DownloadScriptExecuteResult:output_type -> api.compute.v1.DownloadScriptExecuteResultReply
	7,  // [7:13] is the sub-list for method output_type
	1,  // [1:7] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_api_compute_v1_compute_power_proto_init() }
func file_api_compute_v1_compute_power_proto_init() {
	if File_api_compute_v1_compute_power_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_compute_v1_compute_power_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadScriptFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_compute_power_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadScriptFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_compute_power_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScriptListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_compute_power_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScriptListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_compute_power_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunPythonPackageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_compute_power_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunPythonPackageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_compute_power_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelExecPythonPackageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_compute_power_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelExecPythonPackageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_compute_power_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScriptInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_compute_power_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScriptInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_compute_power_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadScriptExecuteResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_compute_power_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadScriptExecuteResultReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_compute_v1_compute_power_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_compute_v1_compute_power_proto_goTypes,
		DependencyIndexes: file_api_compute_v1_compute_power_proto_depIdxs,
		MessageInfos:      file_api_compute_v1_compute_power_proto_msgTypes,
	}.Build()
	File_api_compute_v1_compute_power_proto = out.File
	file_api_compute_v1_compute_power_proto_rawDesc = nil
	file_api_compute_v1_compute_power_proto_goTypes = nil
	file_api_compute_v1_compute_power_proto_depIdxs = nil
}
