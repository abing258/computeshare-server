syntax = "proto3";

package github.com.mohaijiang.api.queue.v1;

import "google/api/annotations.proto";

option go_package = "github.com/mohaijiang/computeshare-server/api/queue/v1;v1";
option java_multiple_files = true;
option java_package = "api.compute.v1";

enum TaskCmd //枚举消息类型
{
  VM_CREATE = 0; // 创建虚拟机
  VM_DELETE = 1;  // 删除虚拟机
  VM_START = 2; // 启动虚拟机
  VM_SHUTDOWN = 3;  //关闭虚拟机
  VM_RESTART = 4;  //关闭虚拟机
  VM_VNC_CONNECT = 5;  // vnc 连接
  NAT_PROXY_CREATE = 6; // nat 代理创建
  NAT_PROXY_DELETE = 7; // nat 代理删除
  NAT_VISITOR_CREATE = 8; // nat 访问创建
  NAT_VISITOR_DELETE = 9; // nat 访问删除
}

enum TaskStatus // 任务状态
{
  CREATED = 0; //创建
  EXECUTING = 1; //执行中
  EXECUTED = 2 ; // 执行成功
  FAILED = 3 ; // 执行失败
}

service QueueTask {
  // 查询队列任务
  rpc GetAgentTask(QueueTaskGetRequest) returns (QueueTaskGetResponse) {
    option (google.api.http) = {
      get: "/v1/queue/task",
    };
  }

  // 更新任务状态
  rpc UpdateAgentTask(QueueTaskUpdateRequest) returns (QueueTaskUpdateResponse) {
    option (google.api.http) = {
      put: "/v1/queue/task",
      body: "*"
    };
  }

}

message QueueTaskGetRequest{
  string id = 1;
}

message QueueTaskGetResponse{
  int32 code = 1;
  string message = 2;
  QueueTaskVo data = 3;
}

message QueueTaskVo {
  string id = 1;  // 任务id
  string agentId = 2; // 客户端节点id
  TaskCmd cmd = 3;    // 执行任务枚举
  string params = 4;  // 执行参数，nat 网络类型对应 NatProxyCreateVO, 虚拟机类型对应 ComputeInstanceTaskParamVO
  TaskStatus status = 5;  // 任务状态
}

message QueueTaskUpdateRequest {
  string id = 1;
  string agentId = 2;
  TaskStatus status = 3;
}

message QueueTaskUpdateResponse {
  int32 code = 1;
  string message = 2;
}

message NatNetworkMappingTaskParamVO {
  string id = 1;
  string name = 2;
  string instanceName = 3;
  int64 instancePort = 4;
  int64 remotePort = 5;
  string gatewayId = 6;
}

message ComputeInstanceTaskParamVO {
  string id = 1;
  string name = 2;
  int64 cpu = 3;
  int64 memory = 4;
  string image = 5;
  string publicKey = 6;
  string password = 7;
  string instanceId = 8;
}
