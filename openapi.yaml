# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: StorageS3 API
    version: 0.0.1
paths:
    /v1/s3bucket:
        get:
            tags:
                - StorageS3
            operationId: StorageS3_ListBucket
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListBucketReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - StorageS3
            operationId: StorageS3_CreateBucket
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateBucketRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBucketReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/s3bucket/{bucketName}:
        delete:
            tags:
                - StorageS3
            operationId: StorageS3_DeleteBucket
            parameters:
                - name: bucketName
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteBucketReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/s3bucket/{bucketName}/objects:
        get:
            tags:
                - StorageS3
            operationId: StorageS3_S3StorageInBucketList
            parameters:
                - name: bucketName
                  in: path
                  required: true
                  schema:
                    type: string
                - name: prefix
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/S3StorageInBucketListReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/s3user:
        get:
            tags:
                - StorageS3
            operationId: StorageS3_GetS3User
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetS3UserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/storage/{bucketName}/objects/delete:
        delete:
            tags:
                - StorageS3
            operationId: StorageS3_S3StorageDelete
            parameters:
                - name: bucketName
                  in: path
                  required: true
                  schema:
                    type: string
                - name: key
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/S3StorageDeleteReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/storage/{bucketName}/objects/download/ersatz:
        get:
            tags:
                - StorageS3
            operationId: StorageS3_S3StorageDownload
            parameters:
                - name: bucketName
                  in: path
                  required: true
                  schema:
                    type: string
                - name: key
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/S3StorageDownloadReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/storage/{bucketName}/objects/upload/ersatz:
        post:
            tags:
                - StorageS3
            operationId: StorageS3_S3StorageUploadFile
            parameters:
                - name: bucketName
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/S3StorageUploadFileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/S3StorageUploadFileReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CreateBucketReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    type: string
        CreateBucketRequest:
            type: object
            properties:
                bucket:
                    type: string
                secretKey:
                    type: string
        DeleteBucketReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
        GetS3UserReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/S3User'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListBucketReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListBucketReply_BucketVo'
        ListBucketReply_BucketVo:
            type: object
            properties:
                id:
                    type: string
                bucket:
                    type: string
                createdTime:
                    type: integer
                    format: int64
        S3Object:
            type: object
            properties:
                etag:
                    type: string
                name:
                    type: string
                size:
                    type: integer
                    format: int32
                lastModify:
                    type: integer
                    format: int64
        S3StorageDeleteReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
        S3StorageDownloadReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/S3StorageDownloadReply_Data'
        S3StorageDownloadReply_Data:
            type: object
            properties:
                body:
                    type: string
                    format: bytes
                name:
                    type: string
        S3StorageInBucketListReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/S3Object'
        S3StorageUploadFileReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/S3Object'
        S3StorageUploadFileRequest:
            type: object
            properties:
                body:
                    type: string
                    format: bytes
                prefix:
                    type: string
                fileName:
                    type: string
                bucketName:
                    type: string
        S3User:
            type: object
            properties:
                accessKey:
                    type: string
                secretKey:
                    type: string
                endpoint:
                    type: string
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
tags:
    - name: StorageS3
